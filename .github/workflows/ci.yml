# This workflow will install dependencies and run tests/linters with a matrix
# of pytest environments on various operating systems.

name: CI

on:
  push:
    branches:
    - master
    - development
    tags:
    - '**'
  pull_request:
    branches:
    - '**'

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        tox-env: [py37, py38, py39]
        include:
          - tox-env: py37
            python-version: 3.7
          - tox-env: py38
            python-version: 3.8
          - tox-env: py39
            python-version: 3.9

    env:
      TOXENV: ${{ matrix.tox-env }}

    steps:
    - uses: actions/checkout@v2
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install apt dependencies
      run: |
        sudo apt install texlive-latex-base
        sudo apt install texlive-latex-extra  # provides 'enumitem'
        sudo apt install texlive-fonts-recommended  # provides 'ecrm1200'
        sudo apt install latexmk pdf2svg librsvg2-bin asymptote
    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip  # upgrade pip
        pip install ".[test]" . # install package + test dependencies
    - name: Run pytest
      run: pytest
<<<<<<< HEAD

#  lint:
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#      max-parallel: 4
#      matrix:
#        tox-env: [flake8, pep517check, checkspelling, checklinks]
#
#    env:
#      TOXENV: ${{ matrix.tox-env }}
#
#    # Allow checklinks to fail
#    continue-on-error: ${{ matrix.tox-env == 'checklinks' }}
#
#    steps:
#    - uses: actions/checkout@v2
#    - name: Setup Python
#      uses: actions/setup-python@v2
#      with:
#        python-version: 3.7
#    - name: Setup Node
#      if: ${{ matrix.tox-env == 'checklinks' }}
#      uses: actions/setup-node@v1
#      with:
#        node-version: '10'
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip tox
#        if [[ "$TOXENV" == 'checklinks' ]]; then npm install -g markdown-link-check; fi
#        if [[ "$TOXENV" == 'checkspelling' ]]; then sudo apt-get install aspell aspell-en; fi
#    - name: Run tox
#      run: python -m tox
=======
>>>>>>> development
